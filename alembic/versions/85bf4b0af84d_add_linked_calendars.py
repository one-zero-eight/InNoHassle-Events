"""Add linked calendars

Revision ID: 85bf4b0af84d
Revises: 0f714fc8defc
Create Date: 2023-10-16 22:34:45.234130

"""
# ruff: noqa: E501
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "85bf4b0af84d"
down_revision: Union[str, None] = "0f714fc8defc"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "linked_calendars",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("alias", sa.String(length=255), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_constraint("workshops_x_ownerships_object_id_fkey", "workshops_x_ownerships")
    op.drop_table("workshop_checkins")
    op.drop_table("timeslots")
    op.drop_table("workshops")
    op.drop_table("workshops_x_ownerships")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "workshops_x_ownerships",
        sa.Column("object_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("role_alias", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["object_id"], ["workshops.id"], name="workshops_x_ownerships_object_id_fkey"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="workshops_x_ownerships_user_id_fkey"),
        sa.PrimaryKeyConstraint("object_id", "user_id", name="workshops_x_ownerships_pkey"),
    )
    op.create_table(
        "workshops",
        sa.Column("alias", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("speaker", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("capacity", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("comment", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("location", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('workshops_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="workshops_pkey"),
        sa.UniqueConstraint("alias", name="workshops_alias_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "timeslots",
        sa.Column("workshop_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("sequence", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("start", postgresql.TIME(), autoincrement=False, nullable=False),
        sa.Column("end", postgresql.TIME(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["workshop_id"], ["workshops.id"], name="timeslots_workshop_id_fkey"),
        sa.PrimaryKeyConstraint("sequence", name="timeslots_pkey"),
    )
    op.create_table(
        "workshop_checkins",
        sa.Column("workshop_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("timeslot_sequence", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "dtstamp", postgresql.TIMESTAMP(), server_default=sa.text("now()"), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="workshop_checkins_user_id_fkey"),
        sa.ForeignKeyConstraint(["workshop_id"], ["workshops.id"], name="workshop_checkins_workshop_id_fkey"),
        sa.PrimaryKeyConstraint("workshop_id", "user_id", "timeslot_sequence", name="workshop_checkins_pkey"),
    )
    op.drop_table("linked_calendars")
    # ### end Alembic commands ###
